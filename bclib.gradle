buildscript {
    dependencies {
        classpath 'org.kohsuke:github-api:1.114'
    }

    repositories {
        gradlePluginPortal()
    }
}
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven { url "https://maven.dblsaiko.net/" }
    maven { url "https://maven.fabricmc.net/" }
    maven { url "https://maven.shedaniel.me/" }
    maven { url 'https://maven.blamejared.com' }
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.terraformersmc.com/releases' }
    maven { url 'https://maven.terraformersmc.com' }
}

loom {
    accessWidenerPath = file("src/main/resources/bclib.accesswidener")
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modCompileOnly "com.terraformersmc:modmenu:${project.modmenu_version}"

    modCompileOnly "dev.emi:emi:${emi_version}"
    //modImplementation "dev.emi:emi:${emi_version}"

    modImplementation "net.darkhax.tips:Tips-Fabric-${project.tips_version}"
    modRuntimeOnly "net.darkhax.bookshelf:Bookshelf-Fabric-${project.bookshelf_version}"
}

processResources {
    println "Version: ${project.mod_version}"
    inputs.property "version", project.mod_version

    filesMatching("fabric.mod.json") {
        expand "version": project.mod_version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    it.options.release = 17
}

javadoc {
    options.tags = ["reason"]
    options.stylesheetFile = new File(projectDir, "javadoc.css");
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
    from "LICENSE.ASSETS"
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

def env = System.getenv()

import org.kohsuke.github.GHReleaseBuilder
import org.kohsuke.github.GitHub

task release(dependsOn: [remapJar, sourcesJar, javadocJar]) {
    onlyIf {
        env.GITHUB_TOKEN
    }

    doLast {
        def github = GitHub.connectUsingOAuth(env.GITHUB_TOKEN as String)
        def repository = github.getRepository("quiqueck/BCLib")

        def releaseBuilder = new GHReleaseBuilder(repository, version as String)
        releaseBuilder.name("${archivesBaseName}-${version}")
        releaseBuilder.body("A changelog can be found at https://github.com/quiqueck/BCLib/commits")
        releaseBuilder.commitish("main")

        def ghRelease = releaseBuilder.create()
        ghRelease.uploadAsset(file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar"), "application/java-archive");
        ghRelease.uploadAsset(file("${project.buildDir}/libs/${archivesBaseName}-${version}-sources.jar"), "application/java-archive");
        ghRelease.uploadAsset(file("${project.buildDir}/libs/${archivesBaseName}-${version}-javadoc.jar"), "application/java-archive");
    }
}

// configure the maven publication
publishing {
    publications {
        gpr(MavenPublication) {
            artifactId archivesBaseName
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/quiqueck/bclib")
            credentials {
                username = env.GITHUB_USER
                password = env.GITHUB_TOKEN
            }
        }
    }
}

configurations {
    dev {
        canBeResolved = false
        canBeConsumed = true
    }
}

artifacts {
    dev jar
}
